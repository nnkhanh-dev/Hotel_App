<div class="container">
    <div class="d-flex ">
        <div class="card bg-danger p-5 text-white fw-bold me-3 w-25">
            <svg xmlns="http://www.w3.org/2000/svg" width="40px" class="mx-auto mb-3" fill="white" viewBox="0 0 640 640">
                <path d="M341.8 72.6C329.5 61.2 310.5 61.2 298.3 72.6L74.3 280.6C64.7 289.6 61.5 303.5 66.3 315.7C71.1 327.9 82.8 336 96 336L112 336L112 512C112 547.3 140.7 576 176 576L464 576C499.3 576 528 547.3 528 512L528 336L544 336C557.2 336 569 327.9 573.8 315.7C578.6 303.5 575.4 289.5 565.8 280.6L341.8 72.6zM304 384L336 384C362.5 384 384 405.5 384 432L384 528L256 528L256 432C256 405.5 277.5 384 304 384z" />
            </svg>
            Phòng: @ViewBag.Rooms
        </div>
        <div class="card bg-success p-5 text-white fw-bold me-3 w-25">
            <svg xmlns="http://www.w3.org/2000/svg" width="40px" class="mx-auto mb-3" fill="white" viewBox="0 0 640 640">
                <path d="M192 64C156.7 64 128 92.7 128 128L128 512C128 547.3 156.7 576 192 576L448 576C483.3 576 512 547.3 512 512L512 128C512 92.7 483.3 64 448 64L192 64zM304 416L336 416C353.7 416 368 430.3 368 448L368 528L272 528L272 448C272 430.3 286.3 416 304 416zM224 176C224 167.2 231.2 160 240 160L272 160C280.8 160 288 167.2 288 176L288 208C288 216.8 280.8 224 272 224L240 224C231.2 224 224 216.8 224 208L224 176zM368 160L400 160C408.8 160 416 167.2 416 176L416 208C416 216.8 408.8 224 400 224L368 224C359.2 224 352 216.8 352 208L352 176C352 167.2 359.2 160 368 160zM224 304C224 295.2 231.2 288 240 288L272 288C280.8 288 288 295.2 288 304L288 336C288 344.8 280.8 352 272 352L240 352C231.2 352 224 344.8 224 336L224 304zM368 288L400 288C408.8 288 416 295.2 416 304L416 336C416 344.8 408.8 352 400 352L368 352C359.2 352 352 344.8 352 336L352 304C352 295.2 359.2 288 368 288z" />
            </svg>
            Tầng: @ViewBag.Areas
        </div>
        <div class="card bg-primary p-5 text-white fw-bold me-3 w-25">
            <svg xmlns="http://www.w3.org/2000/svg" width="40px" class="mx-auto mb-3" fill="white" viewBox="0 0 640 640">
                <path d="M96 128C78.3 128 64 142.3 64 160C64 177.7 78.3 192 96 192L182.7 192C195 220.3 223.2 240 256 240C288.8 240 317 220.3 329.3 192L544 192C561.7 192 576 177.7 576 160C576 142.3 561.7 128 544 128L329.3 128C317 99.7 288.8 80 256 80C223.2 80 195 99.7 182.7 128L96 128zM96 288C78.3 288 64 302.3 64 320C64 337.7 78.3 352 96 352L342.7 352C355 380.3 383.2 400 416 400C448.8 400 477 380.3 489.3 352L544 352C561.7 352 576 337.7 576 320C576 302.3 561.7 288 544 288L489.3 288C477 259.7 448.8 240 416 240C383.2 240 355 259.7 342.7 288L96 288zM96 448C78.3 448 64 462.3 64 480C64 497.7 78.3 512 96 512L150.7 512C163 540.3 191.2 560 224 560C256.8 560 285 540.3 297.3 512L544 512C561.7 512 576 497.7 576 480C576 462.3 561.7 448 544 448L297.3 448C285 419.7 256.8 400 224 400C191.2 400 163 419.7 150.7 448L96 448z" />
            </svg>
            Loại phòng: @ViewBag.RoomTypes
        </div>
        <div class="card bg-warning p-5 text-white fw-bold w-25">
            <svg xmlns="http://www.w3.org/2000/svg" width="40px" class="mx-auto mb-3" fill="white" viewBox="0 0 640 640">
                <path d="M320 312C386.3 312 440 258.3 440 192C440 125.7 386.3 72 320 72C253.7 72 200 125.7 200 192C200 258.3 253.7 312 320 312zM290.3 368C191.8 368 112 447.8 112 546.3C112 562.7 125.3 576 141.7 576L498.3 576C514.7 576 528 562.7 528 546.3C528 447.8 448.2 368 349.7 368L290.3 368z" />
                </svg>
            Khách hàng: @ViewBag.Clients
        </div>
    </div>

    <div class="card shadow p-5 mt-5">
        <div class="card-header d-flex">
            <svg xmlns="http://www.w3.org/2000/svg" width="30px" fill="black" viewBox="0 0 640 640">
                <path d="M128 128C92.7 128 64 156.7 64 192L64 448C64 483.3 92.7 512 128 512L512 512C547.3 512 576 483.3 576 448L576 192C576 156.7 547.3 128 512 128L128 128zM320 224C373 224 416 267 416 320C416 373 373 416 320 416C267 416 224 373 224 320C224 267 267 224 320 224zM512 248C512 252.4 508.4 256.1 504 255.5C475 251.9 452.1 228.9 448.5 200C448 195.6 451.6 192 456 192L504 192C508.4 192 512 195.6 512 200L512 248zM128 392C128 387.6 131.6 383.9 136 384.5C165 388.1 187.9 411.1 191.5 440C192 444.4 188.4 448 184 448L136 448C131.6 448 128 444.4 128 440L128 392zM136 255.5C131.6 256 128 252.4 128 248L128 200C128 195.6 131.6 192 136 192L184 192C188.4 192 192.1 195.6 191.5 200C187.9 229 164.9 251.9 136 255.5zM504 384.5C508.4 384 512 387.6 512 392L512 440C512 444.4 508.4 448 504 448L456 448C451.6 448 447.9 444.4 448.5 440C452.1 411 475.1 388.1 504 384.5z" />
            </svg>
            <h3 class="my-0 ms-3">Doanh thu</h3>
        </div>
        <div class="card-body">
            <div class="d-flex">
                <select id="monthSelect" class="form-control w-50 me-1">
                    <option value="">Tất cả tháng</option>
                </select>
                <select id="yearSelect" class="form-control w-50 ms-1">
                    <option value="">Tất cả năm</option>
                </select>
            </div>
       
            <canvas id="revenueChart" width="600" height="400"></canvas>
        </div>
    </div>
</div>

@section PageScripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let chartInstance = null;
        let fullData = []; // Dữ liệu toàn bộ từ API

        async function fetchRevenueData() {
            const response = await fetch('/Dashboards/Revenue');
            const data = await response.json();
            return data;
        }

        function populateDropdowns(data) {
            const yearSelect = document.getElementById('yearSelect');
            const monthSelect = document.getElementById('monthSelect');

            // Lấy danh sách năm duy nhất
            const years = [...new Set(data.map(item => item.year))].sort((a, b) => a - b);
            const months = [...new Set(data.map(item => item.month))].sort((a, b) => a - b);

            years.forEach(y => {
                const option = document.createElement('option');
                option.value = y;
                option.textContent = `Năm ${y}`;
                yearSelect.appendChild(option);
            });

            months.forEach(m => {
                const option = document.createElement('option');
                option.value = m;
                option.textContent = `Tháng ${m}`;
                monthSelect.appendChild(option);
            });
        }

        function filterData(data, selectedMonth, selectedYear) {
            return data.filter(item => {
                const matchMonth = selectedMonth ? item.month == selectedMonth : true;
                const matchYear = selectedYear ? item.year == selectedYear : true;
                return matchMonth && matchYear;
            });
        }

        function renderChart(data) {
            const labels = data.map(item => `${item.month}/${item.year}`);
            const revenues = data.map(item => item.revenue);

            const ctx = document.getElementById('revenueChart').getContext('2d');

            if (chartInstance) {
                chartInstance.destroy();
            }

            chartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Doanh thu (VND)',
                        data: revenues,
                        backgroundColor: 'rgba(75, 192, 192, 0.6)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return new Intl.NumberFormat('vi-VN', {
                                        style: 'currency',
                                        currency: 'VND'
                                    }).format(context.raw);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString('vi-VN') + ' đ';
                                }
                            }
                        }
                    }
                }
            });
        }

        async function initRevenueChart() {
            fullData = await fetchRevenueData();

            populateDropdowns(fullData);
            renderChart(fullData);

            // Gắn sự kiện lọc khi người dùng chọn
            document.getElementById('monthSelect').addEventListener('change', () => {
                const month = document.getElementById('monthSelect').value;
                const year = document.getElementById('yearSelect').value;
                const filtered = filterData(fullData, month, year);
                renderChart(filtered);
            });

            document.getElementById('yearSelect').addEventListener('change', () => {
                const month = document.getElementById('monthSelect').value;
                const year = document.getElementById('yearSelect').value;
                const filtered = filterData(fullData, month, year);
                renderChart(filtered);
            });
        }

        document.addEventListener('DOMContentLoaded', initRevenueChart);
    </script>
}