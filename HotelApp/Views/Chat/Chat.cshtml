<div class="container">
    <div class="card chat-card shadow my-5 mx-auto">
        <form id="chatForm">
            <div class="card-header">
            UTEHotel 
        </div>
            <div class="card-body">
            <div class="message-list">
                <div class="chat-message-wrapper ai">
                    <div class="message ai-message">Xin chào! Tôi là tư vấn viên AI UTEHotel. Tôi có thể giúp gì cho bạn không?</div>
                </div>
            </div>
        </div>
            <div class="card-footer">
            <div class="d-flex flex-nowrap">
                <input class="form-control me-2" id="userInput" ></input>
                <button class="btn btn-light" type="submit">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20px" fill="black" class="mx-2" viewBox="0 0 640 640">
                        <path d="M568.4 37.7C578.2 34.2 589 36.7 596.4 44C603.8 51.3 606.2 62.2 602.7 72L424.7 568.9C419.7 582.8 406.6 592 391.9 592C377.7 592 364.9 583.4 359.6 570.3L295.4 412.3C290.9 401.3 292.9 388.7 300.6 379.7L395.1 267.3C400.2 261.2 399.8 252.3 394.2 246.7C388.6 241.1 379.6 240.7 373.6 245.8L261.2 340.1C252.1 347.7 239.6 349.7 228.6 345.3L70.1 280.8C57 275.5 48.4 262.7 48.4 248.5C48.4 233.8 57.6 220.7 71.5 215.7L568.4 37.7z" />
                    </svg>
                </button>
            </div>
            
        </div>
        </form>
    </div>
</div>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.on("ReceiveMessage", (user, message) => {
            const chatArea = document.querySelector(".message-list");
            const msgHtml = `
            <div class="chat-message-wrapper ${user === "UTEHotel AI" ? "ai" : "client"}">
                <div class="message ${user === "UTEHotel AI" ? "ai-message" : "client-message"}">${message}</div>
            </div>`;
            chatArea.innerHTML += msgHtml;
            chatArea.scrollTop = chatArea.scrollHeight;
        });

        connection.start();

        document.getElementById("chatForm").addEventListener("submit", function (e) {
            e.preventDefault(); // ngăn reload

            const input = document.getElementById("userInput");
            const content = input.value;
            if (!content.trim()) return;

            // Gửi message người dùng lên server
            fetch("/Chat", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: `content=${encodeURIComponent(content)}`
            });

            input.value = ""; // clear sau khi gửi
        });
    </script>
}